{"version":3,"sources":["components/header.js","components/form/linkItems.js","components/form/link.js","components/form/experienceText.js","components/form/experienceItems.js","components/form/experience.js","components/form/educationItems.js","components/form/education.js","components/form/skillsItems.js","components/form/skills.js","components/form/projectItemsText.js","components/form/projectItems.js","components/form/projects.js","components/form/form.js","components/preview/header.js","components/preview/experienceItems.js","components/preview/projectItems.js","components/preview/previewMain.js","components/preview/educationItems.js","components/preview/sidebar.js","components/preview/preview.js","components/buttonBar.js","components/emptyResume.js","components/exampleResume.js","components/main.js","components/footer.js","App.js","index.js"],"names":["Header","className","LinkItem","id","link","resume","setResume","changeLinkHandler","e","target","name","value","prevState","newList","personalInfo","map","onChange","title","type","placeholder","url","onClick","filter","Link","linkItems","links","uniqid","ExperienceText","parentId","description","text","experience","textList","ExperienceItems","changeExperienceHandler","experienceItemText","company","position","city","start","end","Experience","experienceItems","EducationItems","education","changeEducationHandler","instituteName","degree","subject","Education","educationItems","SkillsItems","skill","skills","Skills","skillsItems","ProjectText","projects","project","ProjectItems","projectsItemText","Project","projectItems","Form","changeInfoHandler","console","log","firstName","lastName","phone","email","summary","PreviewHeader","ExperienceItem","style","fontWeight","color","ProjectItem","PreviewMain","EducationItem","marginBottom","fontSize","SideBar","skillItems","marginTop","Preview","this","props","Component","ButtonBar","onPrint","onClear","onExample","emptyResume","exampleResume","Main","useState","componentRef","useRef","handlePrint","useReactToPrint","content","current","ref","Footer","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbd2bbd1.chunk.js","sourcesContent":["function Header() {\n    return (\n        <div className=\"head-container\">\n            <div className=\"head-wrap\">\n                <h1>Resume Builder</h1>\n            </div>\n        </div>\n    );\n}\n  \n  export default Header;","function LinkItem({ id, link, resume, setResume }) {\n    function changeLinkHandler(e) {\n        const { name, value } = e.target;\n        setResume(prevState => {\n            const newList = resume.personalInfo.link.map((link) => {\n                if (link.id === id) {\n                    return { ...link, [name]: value }\n                }\n                return link\n            })\n            return { ...prevState, personalInfo: { ...resume.personalInfo, link: [...newList] } };\n        })\n    }\n\n    function removeLinkHandler(e) {\n        setResume((prevState) => {\n            const newList = resume.personalInfo.link.filter(link => {\n                return (link.id !== id);\n            })\n            return { ...prevState, personalInfo: { ...resume.personalInfo, link: [...newList] } };\n        });\n    }\n    return (\n        <div className=\"link-item-container\">\n            <input onChange={changeLinkHandler} value={link.title} type=\"text\" name=\"title\" placeholder=\"Title\"></input>\n            <input onChange={changeLinkHandler} value={link.url} type=\"text\" name=\"url\" placeholder=\"Url\"></input>\n            <button onClick={removeLinkHandler}>Delete</button>\n        </div>\n    );\n}\n\nexport default LinkItem;","import uniqid from \"uniqid\";\nimport LinkItem from \"./linkItems\";\n\nfunction Link({ resume, setResume }) {\n    function addLinkHandler() {\n        setResume(prevState => ({\n            ...prevState,\n            personalInfo: {\n                ...prevState.personalInfo,\n                link: [...prevState.personalInfo.link, {\n                    id: uniqid(),\n                    title: \"\",\n                    url: \"\"\n                }]\n            }\n        }))\n    }\n\n    const linkItems = resume.personalInfo.link.map((links) => {\n        return (\n            <LinkItem key={links.id} id={links.id} link={links} resume={resume} setResume={setResume} />\n        )\n    })\n\n    return (\n        <>\n            <div className=\"link-container\">\n                {linkItems}\n            </div>\n            <button onClick={addLinkHandler}>Add</button>\n        </>\n    );\n}\n\nexport default Link;","function ExperienceText({ id, parentId, description, resume, setResume }) {\n    function changeExperienceTextHandler(e) {\n        const { name, value } = e.target;\n        setResume((prevState) => {\n            const newList = resume.experience.map((experience) => {\n                if (experience.id === parentId) {\n                    const textList = experience.description.map((description) => {\n                        if (description.id === id) {\n                            return { ...description, [name]: value }\n                        }\n                        return description\n                    })\n                    return { ...experience, description: [...textList] }\n                }\n                return experience;\n            })\n            return { ...prevState, experience: [...newList] }\n        });\n    }\n\n    function removeExperienceTextHandler() {\n        setResume((prevState) => {\n            const newList = resume.experience.map((experience) => {\n                if (experience.id === parentId) {\n                    const textList = experience.description.filter((description) => {\n                        return (description.id !== id)\n                    })\n                    return { ...experience, description: [...textList] }\n                }\n                return experience;\n            })\n            return { ...prevState, experience: [...newList] }\n        });\n    }\n\n    return (\n        <div className=\"experience-text\">\n            <textarea className=\"experience-textarea\" value={description.text} onChange={changeExperienceTextHandler} name=\"text\" placeholder=\"Description\"></textarea>\n            <button className=\"description-delete-btn\" onClick={removeExperienceTextHandler}>Delete</button>\n        </div>\n    )\n}\n\nexport default ExperienceText;","import uniqid from \"uniqid\";\nimport ExperienceText from \"./experienceText\";\n\nfunction ExperienceItems({ id, experience, resume, setResume }) {\n    function changeExperienceHandler(e) {\n        const { name, value } = e.target;\n        setResume(prevState => {\n            const newList = resume.experience.map((experience) => {\n                if (experience.id === id) {\n                    return { ...experience, [name]: value }\n                }\n                return experience\n            })\n            return { ...prevState, experience: [...newList] };\n        })\n    }\n    function removeExperienceHandler(e) {\n        setResume((prevState) => {\n            const newList = resume.experience.filter(experience => {\n                return (experience.id !== id);\n            })\n            return { ...prevState, experience: [...newList] };\n        });\n    }\n    function addDescriptionHandler() {\n        setResume((prevState) => {\n            const newList = resume.experience.map((experience) => {\n                if (id === experience.id) {\n                    return {\n                        ...experience, description: [...experience.description, {\n                            id: uniqid(),\n                            text: \"\"\n                        }]\n                    }\n                }\n                return experience;\n            })\n            return { ...prevState, experience: [...newList] }\n        })\n    }\n\n    const experienceItemText = resume.experience.map((experience) => {\n        if (experience.id === id) {\n            return (\n                experience.description.map(description => {\n                    return (\n                        <ExperienceText key={description.id} parentId={id} id={description.id} description={description} resume={resume} setResume={setResume} />\n                    )\n                })\n            )\n        }\n        return \"\";\n    })\n\n    return (\n        <>\n            <input onChange={changeExperienceHandler} value={experience.company} type=\"text\" name=\"company\" placeholder=\"Company\"></input>\n            <input onChange={changeExperienceHandler} value={experience.position} type=\"text\" name=\"position\" placeholder=\"Position\"></input>\n            <input onChange={changeExperienceHandler} value={experience.city} type=\"text\" name=\"city\" placeholder=\"City\"></input>\n            <input onChange={changeExperienceHandler} value={experience.start} type=\"text\" name=\"start\" placeholder=\"Start Date\"></input>\n            <input onChange={changeExperienceHandler} value={experience.end} type=\"text\" name=\"end\" placeholder=\"End Date\"></input>\n            <div>\n                {experienceItemText}\n                <button className=\"add-btn\" onClick={addDescriptionHandler}>Add</button>\n            </div>\n\n            <button onClick={removeExperienceHandler}>Delete</button>\n        </>\n    );\n}\n\nexport default ExperienceItems;","import uniqid from \"uniqid\";\nimport ExperienceItems from \"./experienceItems\";\n\nfunction Experience({ resume, setResume }) {\n    function addExperienceHandler() {\n        setResume(prevState => ({\n            ...prevState,\n            experience: [...prevState.experience, {\n                id: uniqid(),\n                company: \"\",\n                position: \"\",\n                city: \"\",\n                start: \"\",\n                end: \"\",\n                description: [{\n                    id: uniqid(),\n                    text: \"\"\n                }]\n            }]\n        }))\n    }\n\n    const experienceItems = resume.experience.map((experience) => {\n        return (\n            <ExperienceItems key={experience.id} id={experience.id} experience={experience} resume={resume} setResume={setResume} />\n        )\n    })\n\n    return (\n        <>\n            {experienceItems}\n            <button onClick={addExperienceHandler}>Add</button>\n        </ >\n    )\n}\n\nexport default Experience;","function EducationItems({ id, education, resume, setResume }) {\n    function changeEducationHandler(e) {\n        const { name, value } = e.target;\n        setResume(prevState => {\n            const newList = resume.education.map((education) => {\n                if (education.id === id) {\n                    return { ...education, [name]: value }\n                }\n                return education\n            })\n            return { ...prevState, education: [...newList] };\n        })\n    }\n\n    function removeEducationHandler(e) {\n        setResume((prevState) => {\n            const newList = resume.education.filter(education => {\n                return (education.id !== id);\n            })\n            return { ...prevState, education: [...newList] };\n        });\n    }\n    return (\n        <>\n            <input onChange={changeEducationHandler} value={education.instituteName} type=\"text\" name=\"instituteName\" placeholder=\"Institution Name\"></input>\n            <input onChange={changeEducationHandler} value={education.city} type=\"text\" name=\"city\" placeholder=\"City\"></input>\n            <input onChange={changeEducationHandler} value={education.degree} type=\"text\" name=\"degree\" placeholder=\"Degree\"></input>\n            <input onChange={changeEducationHandler} value={education.subject} type=\"text\" name=\"subject\" placeholder=\"Subject\"></input>\n            <input onChange={changeEducationHandler} value={education.start} type=\"text\" name=\"start\" placeholder=\"Start Date\"></input>\n            <input onChange={changeEducationHandler} value={education.end} type=\"text\" name=\"end\" placeholder=\"End Date\"></input>\n            <button onClick={removeEducationHandler}>Delete</button>\n        </>\n    );\n}\n\nexport default EducationItems;","import uniqid from \"uniqid\";\nimport EducationItems from \"./educationItems\";\n\nfunction Education({ resume, setResume }) {\n    function addEducationHandler() {\n        setResume(prevState => ({\n            ...prevState,\n            education: [...prevState.education, {\n                id: uniqid(),\n                instituteName: \"\",\n                city: \"\",\n                degree: \"\",\n                subject: \"\",\n                start: \"\",\n                end: \"\"\n            }]\n        }))\n    }\n\n    const educationItems = resume.education.map((education) => {\n        return (\n            <EducationItems key={education.id} id={education.id} education={education} resume={resume} setResume={setResume} />\n        )\n    })\n\n    return (\n        <>\n            {educationItems}\n            <button onClick={addEducationHandler}>Add</button>\n        </ >\n    )\n}\n\nexport default Education;","function SkillsItems({ id, skill, resume, setResume }) {\n    function changeSkillHandler(e) {\n        const { name, value } = e.target;\n        setResume(prevState => {\n            const newList = resume.skills.map((skill) => {\n                if (skill.id === id) {\n                    return { ...skill, [name]: value }\n                }\n                return skill\n            })\n            return { ...prevState, skills: [...newList] };\n        })\n    }\n    function removeSkillHandler(e) {\n        setResume((prevState) => {\n            const newList = resume.skills.filter(skill => {\n                return (skill.id !== id);\n            })\n            return { ...prevState, skills: [...newList] };\n        });\n    }\n    return (\n        <>\n            <input onChange={changeSkillHandler} value={skill.skill} type=\"text\" name=\"skill\" placeholder=\"Add Skill\"></input>\n            <button onClick={removeSkillHandler}>Delete</button>\n        </>\n    );\n}\n\nexport default SkillsItems;","import uniqid from \"uniqid\";\nimport SkillsItems from \"./skillsItems\";\n\n\nfunction Skills({ resume, setResume }) {\n    function addSkillHandler() {\n        setResume(prevState => ({\n            ...prevState,\n            skills: [...prevState.skills, {\n                id: uniqid(),\n                skill: \"\"\n            }]\n        }))\n    }\n\n    const skillsItems = resume.skills.map((skill) => {\n        return (\n            <SkillsItems key={skill.id} id={skill.id} skill={skill} resume={resume} setResume={setResume} />\n        )\n    })\n\n    return (\n        <>\n            {skillsItems}\n            <button onClick={addSkillHandler}>Add</button>\n        </ >\n    )\n}\n\nexport default Skills;","function ProjectText({ id, parentId, description, resume, setResume }) {\n    function changeProjectTextHandler(e) {\n        const { name, value } = e.target;\n        setResume((prevState) => {\n            const newList = resume.projects.map((project) => {\n                if (project.id === parentId) {\n                    const textList = project.description.map((description) => {\n                        if (description.id === id) {\n                            return { ...description, [name]: value }\n                        }\n                        return description\n                    })\n                    return { ...project, description: [...textList] }\n                }\n                return project;\n            })\n            return { ...prevState, projects: [...newList] }\n        });\n    }\n\n    function removeProjectTextHandler() {\n        setResume((prevState) => {\n            const newList = resume.projects.map((project) => {\n                if (project.id === parentId) {\n                    const textList = project.description.filter((description) => {\n                        return (description.id !== id)\n                    })\n                    return { ...project, description: [...textList] }\n                }\n                return project;\n            })\n            return { ...prevState, projects: [...newList] }\n        });\n    }\n\n    return (\n        <div className=\"experience-text\">\n            <textarea className=\"experience-textarea\" onChange={changeProjectTextHandler} value={description.text} name=\"text\" placeholder=\"Description\"></textarea>\n            <button onClick={removeProjectTextHandler}>Delete</button>\n        </div>\n    )\n}\n\nexport default ProjectText;","import uniqid from \"uniqid\";\nimport ProjectText from \"./projectItemsText\";\n\nfunction ProjectItems({ id, project, resume, setResume }) {\n    function changeProjectHandler(e) {\n        const { name, value } = e.target;\n        setResume(prevState => {\n            const newList = resume.projects.map((projects) => {\n                if (projects.id === id) {\n                    return { ...projects, [name]: value }\n                }\n                return projects\n            })\n            return { ...prevState, projects: [...newList] };\n        })\n    }\n    function removeProjectHandler(e) {\n        setResume((prevState) => {\n            const newList = resume.projects.filter(projects => {\n                return (projects.id !== id);\n            })\n            return { ...prevState, projects: [...newList] };\n        });\n    }\n\n    function addDescriptionHandler() {\n        setResume((prevState) => {\n            const newList = resume.projects.map((projects) => {\n                if (id === projects.id) {\n                    return {\n                        ...projects, description: [...projects.description, {\n                            id: uniqid(),\n                            text: \"\"\n                        }]\n                    }\n                }\n                return projects;\n            })\n            return { ...prevState, projects: [...newList] }\n        })\n    }\n\n    const projectsItemText = resume.projects.map((projects) => {\n        if (projects.id === id) {\n            return (\n                projects.description.map(description => {\n                    return (\n                        <ProjectText key={description.id} parentId={id} id={description.id} description={description} resume={resume} setResume={setResume} />\n                    )\n                })\n            )\n        }\n        return \"\";\n    })\n\n    return (\n        <>\n            <input onChange={changeProjectHandler} value={project.name} type=\"text\" name=\"name\" placeholder=\"Project Name\"></input>\n            <div>\n                {projectsItemText}\n                <button className=\"add-btn\" onClick={addDescriptionHandler}>Add</button>\n            </div>\n            <button onClick={removeProjectHandler}>Delete</button>\n        </>\n    );\n}\n\nexport default ProjectItems;","import uniqid from \"uniqid\";\nimport ProjectItems from \"./projectItems\";\n\nfunction Project({ resume, setResume }) {\n    function addProjectHandler() {\n        setResume(prevState => ({\n            ...prevState,\n            projects: [...prevState.projects, {\n                id: uniqid(),\n                description: [{\n                    id: uniqid(),\n                    text: \"\"\n                }]\n            }]\n        }))\n    }\n\n    const projectItems = resume.projects.map((project) => {\n        return (\n            <ProjectItems key={project.id} id={project.id} project={project} resume={resume} setResume={setResume} />\n        )\n    })\n\n    return (\n        <>\n            {projectItems}\n            <button onClick={addProjectHandler}>Add</button>\n        </ >\n    )\n}\n\nexport default Project;","import Link from \"./link\"\nimport Experience from \"./experience\";\nimport Education from \"./education\"\nimport Skills from \"./skills\"\nimport Project from \"./projects\";\n\nfunction Form({ resume, setResume }) {\n    function changeInfoHandler(e) {\n        const { name, value } = e.target;\n        setResume(prevState => ({\n            ...prevState,\n            personalInfo: {\n                ...prevState.personalInfo,\n                [name]: value\n            }\n        }))\n        console.log(resume);\n    }\n\n    return (\n        <div className=\"form-container\">\n            <legend>Peronal Information</legend>\n            <input onChange={changeInfoHandler} value={resume.personalInfo.firstName} type=\"text\" name=\"firstName\" placeholder=\"First Name\"></input>\n            <input onChange={changeInfoHandler} value={resume.personalInfo.lastName} type=\"text\" name=\"lastName\" placeholder=\"Last Name\"></input>\n            <input onChange={changeInfoHandler} value={resume.personalInfo.title} type=\"text\" name=\"title\" placeholder=\"Title\"></input>\n            <input onChange={changeInfoHandler} value={resume.personalInfo.phone} type=\"text\" name=\"phone\" placeholder=\"Phone Number\"></input>\n            <input onChange={changeInfoHandler} value={resume.personalInfo.email} type=\"email\" name=\"email\" placeholder=\"Email\"></input>\n            <textarea onChange={changeInfoHandler} value={resume.personalInfo.summary} name=\"summary\" placeholder=\"Summary\"></textarea>\n\n            <legend>Links</legend>\n            <Link resume={resume} setResume={setResume} />\n\n            <legend>Experience</legend>\n            <Experience resume={resume} setResume={setResume} />\n\n            <legend>Projects</legend>\n            <Project resume={resume} setResume={setResume} />\n\n            <legend>Education</legend>\n            <Education resume={resume} setResume={setResume} />\n\n            <legend>Skills</legend>\n            <Skills resume={resume} setResume={setResume} />\n        </div>\n    );\n}\n\nexport default Form;","function PreviewHeader({ resume }) {\n    return (\n        <div className=\"preview-header-container\">\n            <h1>\n                {resume.personalInfo.firstName} {resume.personalInfo.lastName}\n            </h1>\n            <h2>\n                {resume.personalInfo.title}\n            </h2>\n        </div>\n    )\n}\n\nexport default PreviewHeader;","function ExperienceItem({ experience }) {\n    const newList = experience.description.map((description) => {\n        return (\n            <li key={description.id}>{description.text}</li>\n        )\n    })\n    return (\n        <div className=\"experience\">\n            <div className=\"experience-flex\">\n                <div style={{ fontWeight: \"bold\" }}>{experience.company}, {experience.city}</div>\n                <div style={{ color: \"rgb(83, 83, 83)\" }}>{experience.start} - {experience.end}</div>\n            </div>\n            <div><i>{experience.position}</i></div>\n            <ul className=\"preview-experience-text\">{newList}</ul>\n        </div>\n    )\n}\n\nexport default ExperienceItem;","function ProjectItem({ project }) {\n    const newList = project.description.map((description) => {\n        return (\n            <li key={description.id}>{description.text}</li>\n        )\n    })\n    return (\n        <div>\n            <div style={{ fontWeight: \"bold\" }}>{project.name}</div>\n            <ul className=\"preview-experience-text\">{newList}</ul>\n        </div>\n    )\n}\n\nexport default ProjectItem;","import ExperienceItem from \"./experienceItems\";\nimport ProjectItem from \"./projectItems\";\n\nfunction PreviewMain({ resume }) {\n    const experienceItems = resume.experience.map((experience) => (\n        <ExperienceItem key={experience.id} experience={experience} />\n    ));\n    const projectItems = resume.projects.map((project) => (\n        <ProjectItem key={project.id} project={project} />\n    ));\n\n    return (\n        <div className=\"preview-content\">\n            <div>\n                <legend>Experience</legend>\n                {experienceItems}\n            </div>\n\n            <legend>Projects</legend>\n            {projectItems}\n        </div>\n    )\n}\n\nexport default PreviewMain;","function EducationItem({ education }) {\n    return (\n        <div className=\"education\">\n            <div style={{ fontWeight: \"bold\", marginBottom: \"2px\" }}>{education.instituteName}</div>\n            <div className=\"preview-education-wrapper\">\n                <i>{education.subject} ({education.degree})</i>\n            </div>\n            <div className=\"preview-education-wrapper\" style={{ color: \"rgb(83, 83, 83)\", fontSize: \"13px\", marginBottom: \"10px\" }}>\n                <div style={{ marginBottom: \"5px\" }}>{education.start} - {education.end}</div>\n\n                <div>{education.city}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default EducationItem;","import EducationItem from \"./educationItems\";\n\nfunction SideBar({ resume }) {\n    const linkItems = resume.personalInfo.link.map((link) => {\n        return (\n            <div key={link.id} className=\"preview-link-container\">\n                <div>{link.title}</div>\n                <div style={{ color: \"rgb(83, 83, 83)\" }}>{link.url}</div>\n            </div>\n        )\n    });\n    const skillItems = resume.skills.map((skill) => {\n        return (\n            <div key={skill.id} className=\"preview-skills-container\">\n                <div style={{ marginBottom: \"5px\", color: \"rgb(83, 83, 83)\" }}>{skill.skill}</div>\n            </div>\n        )\n    });\n    const educationItems = resume.education.map((education) => (\n        <EducationItem key={education.id} education={education} />\n    ));\n\n    return (\n        <div className=\"side-container\">\n            <div className=\"personal-info\"><b>\n                <div>{resume.personalInfo.phone}</div>\n                <div>{resume.personalInfo.email}</div>\n            </b></div>\n\n            <legend>Socials</legend>\n            {linkItems}\n\n            <legend style={{ marginTop: \"40px\" }}>Skills</legend>\n            {skillItems}\n\n            <legend style={{ marginTop: \"40px\" }}>Education</legend>\n            {educationItems}\n        </div>\n    )\n}\n\nexport default SideBar;","import { Component } from \"react\";\nimport PreviewHeader from \"./header\";\nimport PreviewMain from \"./previewMain\";\nimport SideBar from \"./sidebar\";\n\nclass Preview extends Component {\n    render() {\n        const { resume } = this.props;\n\n        return (\n            <div className=\"preview-container\">\n                <div className=\"content-container\">\n                    <PreviewHeader resume={resume} />\n\n                    <div className=\"summary\">{resume.personalInfo.summary}</div>\n\n                    <PreviewMain resume={resume} />\n                </div>\n                <SideBar resume={resume} />\n            </div>\n        )\n    }\n}\n\nexport default Preview;","function ButtonBar({ onPrint, onClear, onExample }) {\n    return (\n        <div className=\"bar-container\">\n            <button onClick={onPrint}>Print</button>\n            <button onClick={onClear}>Clear</button>\n            <button onClick={onExample}>Example</button>\n        </div>\n    )\n}\n\nexport default ButtonBar;","import uniqid from \"uniqid\";\nconst emptyResume = {\n    personalInfo:{\n      firstName: \"\",\n      lastName: \"\",\n      title: \"\",\n      phone: \"\",\n      email: \"\",\n      summary: \"\",\n      link:[{\n        id: uniqid(),\n        title: \"\",\n        url: \"\"\n      }]\n    },\n    skills:[{\n        id: uniqid(),\n        skill: \"\"\n    }],\n    experience:[{\n      id: uniqid(),\n      company: \"\",\n      position: \"\",\n      city: \"\",\n      start: \"\",\n      end: \"\",\n      description:[{\n        id: uniqid(),\n        text: \"\"\n      }]\n    }],\n    projects:[{\n      id: uniqid(),\n      name: \"\",\n      description:[{\n        id: uniqid(),\n        text: \"\"\n      }]\n    }],\n    education:[{\n      id: uniqid(),\n      instituteName: \"\",\n      city: \"\",\n      degree: \"\",\n      subject: \"\",\n      start: \"\",\n      end: \"\"\n    }]\n  }\n\n  export default emptyResume;","import uniqid from \"uniqid\";\nconst exampleResume = {\n    personalInfo: {\n        firstName: \"John\",\n        lastName: \"Doe\",\n        title: \"Web Developer\",\n        phone: \"(123) 456-7890\",\n        email: \"johndoe@mail.com\",\n        summary: \"Dedicated web developer with five fake years of experience in database administration and website design. Strong creative and analytical skills. Team player with an eye for detail. MySQL, Python and Ruby on Rails.\",\n        link: [{\n            id: uniqid(),\n            title: \"Github\",\n            url: \"github.com/johndoe\"\n        }, {\n            id: uniqid(),\n            title: \"Portfolio\",\n            url: \"johndoe.johndoe\"\n        }, {\n            id: uniqid(),\n            title: \"LinkedIn\",\n            url: \"@Johndoe\"\n        }]\n    },\n    skills: [{\n        id: uniqid(),\n        skill: \"Python (Django, Flask)\"\n    }, {\n        id: uniqid(),\n        skill: \"Ruby on Rails\"\n    }, {\n        id: uniqid(),\n        skill: \"Javascript (NodeJS, ReactJS, Angular)\"\n    }, {\n        id: uniqid(),\n        skill: \"Database (MySQL, PostgreSQL)\"\n    }, {\n        id: uniqid(),\n        skill: \"HTML/CSS\"\n    }, {\n        id: uniqid(),\n        skill: \"Unix, Git\"\n    }],\n    experience: [{\n        id: uniqid(),\n        company: \"Fake Amazon\",\n        position: \"Junior Web Developer\",\n        city: \"Toronto\",\n        start: \"Jan 2019\",\n        end: \"Dec 2021\",\n        description: [{\n            id: uniqid(),\n            text: \"Did some fake work resulting in a 25% increase in user clicks and subsequently 33% in customer purchases\"\n        }, {\n            id: uniqid(),\n            text: \"Administer the full lifecycle of software developement of 12 fake critikal projects of the company with 100% on-time delivery\"\n        }, {\n            id: uniqid(),\n            text: \"Applied version control software (Git) to track, test, and update fake pre-existing source code\"\n        }]\n    }, {\n        id: uniqid(),\n        company: \"Fake RBC\",\n        position: \"Web Developer CO-OP\",\n        city: \"Toronto\",\n        start: \"Jun 2018\",\n        end: \"Dec 2018\",\n        description: [{\n            id: uniqid(),\n            text: \"Did some fake work resulting in a 25% increase in user clicks and subsequently 33% in customer purchases\"\n        }, {\n            id: uniqid(),\n            text: \"Administer the full lifecycle of software developement of 12 fake critikal projects of the company with 100% on-time delivery\"\n        }, {\n            id: uniqid(),\n            text: \"Applied version control software (Git) to track, test, and update fake pre-existing source code\"\n        }]\n    }, {\n        id: uniqid(),\n        company: \"Fake Startup\",\n        position: \"Data Ananlyst CO-OP\",\n        city: \"Toronto\",\n        start: \"Jan 2018\",\n        end: \"Jun 2018\",\n        description: [{\n            id: uniqid(),\n            text: \"Did some fake work resulting in a 25% increase in user clicks and subsequently 33% in customer purchases\"\n        }, {\n            id: uniqid(),\n            text: \"Administer the full lifecycle of software developement of 12 fake critikal projects of the company with 100% on-time delivery\"\n        }, {\n            id: uniqid(),\n            text: \"Applied version control software (Git) to track, test, and update fake pre-existing source code\"\n        }]\n    }],\n    projects: [{\n        id: uniqid(),\n        name: \"Poker Simulation\",\n        description: [{\n            id: uniqid(),\n            text: \"Built fake full stack app to allow users to simulate and visualize outcomes of pokerhands against opponents of different play\"\n        },{\n            id: uniqid(),\n            text: \"Used: Javascript, SQL, HTML/CSS\"\n        }]\n    }],\n    education: [{\n        id: uniqid(),\n        instituteName: \"Fake Harvard\",\n        city: \"Cambridge, MA\",\n        degree: \"B.S.\",\n        subject: \"Computer Science\",\n        start: \"Sep 2014\",\n        end: \"Jun 2018\"\n    }]\n}\n\nexport default exampleResume;","import { useState, useRef } from \"react\";\nimport { useReactToPrint } from 'react-to-print';\n\nimport Form from \"./form/form\";\nimport Preview from \"./preview/preview\";\nimport ButtonBar from \"./buttonBar\";\nimport emptyResume from \"./emptyResume\"\nimport exampleResume from \"./exampleResume\";\n\nfunction Main() {\n    const [resume, setResume] = useState(emptyResume)\n\n    const componentRef = useRef()\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current\n    })\n\n    function clear() {\n        setResume(emptyResume);\n    }\n    function setExample() {\n        setResume(exampleResume);\n    }\n\n    return (\n        <>\n            <ButtonBar onPrint={handlePrint} onClear={clear} onExample={setExample} setResume={setResume} />\n            <div className=\"main-container\">\n                <Form resume={resume} setResume={setResume} />\n                <Preview resume={resume} ref={componentRef} />\n            </div>\n        </>\n    );\n}\n\nexport default Main;","function Footer() {\n    return (\n        <div className=\"footer-container\">\n            <div className=\"signature\"> Built by\n                <a className=\"link-git\" href=\"https://github.com/jianylei\" target=\"_blank\" rel=\"noreferrer\"> jianylei </a> | <a className=\"link-git\" href=\"https://github.com/jianylei/resume-builder\" target=\"_blank\" rel=\"noreferrer\"> Source code </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import Header from \"./components/header\";\nimport Main from \"./components/main\";\nimport Footer from \"./components/footer\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n     <Header />\n     <Main/>\n     <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}